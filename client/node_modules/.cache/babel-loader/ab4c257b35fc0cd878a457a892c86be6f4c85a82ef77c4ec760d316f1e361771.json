{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea.js';\nimport useStyles from './SelectDropdown.styles.js';\nimport { Popper } from '../../Popper/Popper.js';\nimport { Paper } from '../../Paper/Paper.js';\nconst SelectDropdown = forwardRef((_ref, ref) => {\n  let {\n    mounted,\n    transition,\n    transitionDuration,\n    transitionTimingFunction,\n    uuid,\n    shadow,\n    maxDropdownHeight,\n    withinPortal = true,\n    children,\n    classNames,\n    styles,\n    dropdownComponent,\n    referenceElement,\n    direction = \"column\",\n    onDirectionChange,\n    switchDirectionOnFlip = false,\n    zIndex = getDefaultZIndex(\"popover\"),\n    dropdownPosition = \"flip\",\n    __staticSelector,\n    positionDependencies = []\n  } = _ref;\n  const {\n    classes\n  } = useStyles({\n    native: dropdownComponent !== SelectScrollArea\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const previousPlacement = useRef(\"bottom\");\n  return /* @__PURE__ */React.createElement(Popper, {\n    referenceElement,\n    mounted,\n    transition,\n    transitionDuration,\n    exitTransitionDuration: 0,\n    transitionTimingFunction,\n    position: dropdownPosition === \"flip\" ? \"bottom\" : dropdownPosition,\n    withinPortal,\n    forceUpdateDependencies: positionDependencies,\n    zIndex,\n    modifiers: [{\n      name: \"preventOverflow\",\n      enabled: false\n    }, {\n      name: \"flip\",\n      enabled: dropdownPosition === \"flip\"\n    }, {\n      name: \"sameWidth\",\n      enabled: true,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: _ref2 => {\n        let {\n          state\n        } = _ref2;\n        state.styles.popper.width = `${state.rects.reference.width}px`;\n      },\n      effect: _ref3 => {\n        let {\n          state\n        } = _ref3;\n        state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n      }\n    }, {\n      name: \"directionControl\",\n      enabled: true,\n      phase: \"main\",\n      fn: _ref4 => {\n        let {\n          state\n        } = _ref4;\n        if (previousPlacement.current !== state.placement) {\n          previousPlacement.current = state.placement;\n          const nextDirection = state.placement === \"top\" ? \"column-reverse\" : \"column\";\n          if (direction !== nextDirection && switchDirectionOnFlip) {\n            onDirectionChange && onDirectionChange(nextDirection);\n          }\n        }\n      }\n    }]\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      maxHeight: maxDropdownHeight,\n      display: \"flex\"\n    }\n  }, /* @__PURE__ */React.createElement(Paper, {\n    radius: \"sm\",\n    component: dropdownComponent || \"div\",\n    id: `${uuid}-items`,\n    \"aria-labelledby\": `${uuid}-label`,\n    role: \"listbox\",\n    className: classes.dropdown,\n    shadow,\n    ref,\n    onMouseDown: event => event.preventDefault()\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: direction,\n      width: \"100%\"\n    }\n  }, children))));\n});\nSelectDropdown.displayName = \"@mantine/core/SelectDropdown\";\nexport { SelectDropdown };","map":{"version":3,"mappings":"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","names":["SelectDropdown","forwardRef","ref","mounted","transition","transitionDuration","transitionTimingFunction","uuid","shadow","maxDropdownHeight","withinPortal","children","classNames","styles","dropdownComponent","referenceElement","direction","onDirectionChange","switchDirectionOnFlip","zIndex","getDefaultZIndex","dropdownPosition","__staticSelector","positionDependencies","classes","useStyles","native","SelectScrollArea","name","previousPlacement","useRef","React","createElement","Popper","exitTransitionDuration","position","forceUpdateDependencies","modifiers","enabled","phase","requires","fn","state","popper","width","rects","reference","effect","elements","style","offsetWidth","current","placement","nextDirection","maxHeight","display","Paper","radius","component","id","role","className","dropdown","onMouseDown","event","preventDefault","flexDirection","displayName"],"sources":["/Users/vincentlangat/Desktop/React-Projects/day19-social-media-app/node_modules/@mantine/core/src/components/Select/SelectDropdown/SelectDropdown.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport { DefaultProps, MantineShadow, Selectors, getDefaultZIndex } from '@mantine/styles';\nimport type { Placement } from '@popperjs/core';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea';\nimport { MantineTransition } from '../../Transition';\nimport { Paper } from '../../Paper';\nimport useStyles from './SelectDropdown.styles';\nimport { Popper } from '../../Popper';\n\nexport type SelectDropdownStylesNames = Selectors<typeof useStyles>;\n\ninterface SelectDropdownProps extends DefaultProps<SelectDropdownStylesNames> {\n  mounted: boolean;\n  transition: MantineTransition;\n  transitionDuration: number;\n  transitionTimingFunction: string;\n  uuid: string;\n  shadow: MantineShadow;\n  maxDropdownHeight?: number | string;\n  withinPortal?: boolean;\n  children: React.ReactNode;\n  __staticSelector: string;\n  dropdownComponent?: React.FC<any>;\n  referenceElement?: HTMLElement;\n  direction?: React.CSSProperties['flexDirection'];\n  onDirectionChange?: (direction: React.CSSProperties['flexDirection']) => void;\n  switchDirectionOnFlip?: boolean;\n  zIndex?: number;\n  dropdownPosition?: 'bottom' | 'top' | 'flip';\n  positionDependencies?: any[];\n}\n\nexport const SelectDropdown = forwardRef<HTMLDivElement, SelectDropdownProps>(\n  (\n    {\n      mounted,\n      transition,\n      transitionDuration,\n      transitionTimingFunction,\n      uuid,\n      shadow,\n      maxDropdownHeight,\n      withinPortal = true,\n      children,\n      classNames,\n      styles,\n      dropdownComponent,\n      referenceElement,\n      direction = 'column',\n      onDirectionChange,\n      switchDirectionOnFlip = false,\n      zIndex = getDefaultZIndex('popover'),\n      dropdownPosition = 'flip',\n      __staticSelector,\n      positionDependencies = [],\n    }: SelectDropdownProps,\n    ref\n  ) => {\n    const { classes } = useStyles(\n      { native: dropdownComponent !== SelectScrollArea },\n      { classNames, styles, name: __staticSelector }\n    );\n\n    const previousPlacement = useRef<Placement>('bottom');\n\n    return (\n      <Popper\n        referenceElement={referenceElement}\n        mounted={mounted}\n        transition={transition}\n        transitionDuration={transitionDuration}\n        exitTransitionDuration={0}\n        transitionTimingFunction={transitionTimingFunction}\n        position={dropdownPosition === 'flip' ? 'bottom' : dropdownPosition}\n        withinPortal={withinPortal}\n        forceUpdateDependencies={positionDependencies}\n        zIndex={zIndex}\n        modifiers={[\n          {\n            name: 'preventOverflow',\n            enabled: false,\n          },\n          {\n            name: 'flip',\n            enabled: dropdownPosition === 'flip',\n          },\n          {\n            // @ts-ignore\n            name: 'sameWidth',\n            enabled: true,\n            phase: 'beforeWrite',\n            requires: ['computeStyles'],\n            fn: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.styles.popper.width = `${state.rects.reference.width}px`;\n            },\n            effect: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n            },\n          },\n          {\n            // @ts-ignore\n            name: 'directionControl',\n            enabled: true,\n            phase: 'main',\n            fn: ({ state }) => {\n              if (previousPlacement.current !== state.placement) {\n                previousPlacement.current = state.placement;\n\n                const nextDirection = state.placement === 'top' ? 'column-reverse' : 'column';\n\n                if (direction !== nextDirection && switchDirectionOnFlip) {\n                  onDirectionChange && onDirectionChange(nextDirection);\n                }\n              }\n            },\n          },\n        ]}\n      >\n        <div style={{ maxHeight: maxDropdownHeight, display: 'flex' }}>\n          <Paper<'div'>\n            radius=\"sm\"\n            component={(dropdownComponent || 'div') as any}\n            id={`${uuid}-items`}\n            aria-labelledby={`${uuid}-label`}\n            role=\"listbox\"\n            className={classes.dropdown}\n            shadow={shadow}\n            ref={ref}\n            onMouseDown={(event) => event.preventDefault()}\n          >\n            <div style={{ display: 'flex', flexDirection: direction, width: '100%' }}>\n              {children}\n            </div>\n          </Paper>\n        </div>\n      </Popper>\n    );\n  }\n);\n\nSelectDropdown.displayName = '@mantine/core/SelectDropdown';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}